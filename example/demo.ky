// single-line comment

/*
Multi
line
comment
*/

/*
Multi line comments

/*
can be nested!
/* As much as you want!*/
*/

*/


// number literals
20; // a semicolon can be used to deliberately end a statement, but this is usually unnecessary
-99 // in this case, it stops the '-' in '-99' from being confused for subtraction
1.6;
-9.1;
0.1;
-0.5;

// binary expressions
1 + 2 * 3 - 4;
(1 + 2) * 3 - 4;
1 + 2 - 3 * 4 / 5 % 6;

// number comparison
2 == 3;
4 < 5;

// boolean literals
true
false

// boolean operations
!true
!false

true || false
true && false;

(true || false) || (false && true)

// string literal
"hello world"

// object literal
{
    x: 2,
    y: "abc",
    z: false,
}

// if-expression (evaluates to a value, but cannot return or break)
let x = if (true) { 3 } else if (2) { 4 } else { 5 }

// if-statement (does not evaluate to a value, but can affect control flow)
if 1 {
    x = 3
} else if(2) {
    z = 5
} else {
    q = 6
}

let z = 2;